apiVersion: apps/v1
kind: Deployment
metadata:
  name: connector
  labels:
    app: connector
    version: v1.0.0
spec:
  replicas: 2  # High availability
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: connector
  template:
    metadata:
      labels:
        app: connector
        version: v1.0.0
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        fsGroup: 1001
      containers:
      - name: connector
        image: connector:latest
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        - name: metrics
          containerPort: 9090
          protocol: TCP
        env:
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: dolphin-secrets
              key: redis-url
        - name: MODAL_API_ENDPOINT
          valueFrom:
            configMapKeyRef:
              name: dolphin-config
              key: modal-api-endpoint
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: dolphin-config
              key: log-level
        - name: PORT
          value: "8080"
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 2
        volumeMounts:
        - name: config
          mountPath: /app/configs
          readOnly: true
      volumes:
      - name: config
        configMap:
          name: dolphin-config-files
---
apiVersion: v1
kind: Service
metadata:
  name: connector-service
  labels:
    app: connector
spec:
  type: ClusterIP
  ports:
  - port: 8080
    targetPort: http
    protocol: TCP
    name: http
  - port: 9090
    targetPort: metrics
    protocol: TCP
    name: metrics
  selector:
    app: connector
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: dolphin-config
data:
  modal-api-endpoint: "https://abhishekgautam011--dolphin-parser-dolphinparser"
  log-level: "info"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: dolphin-config-files
data:
  production.yaml: |
    server:
      port: 8080
      max_connections: 3000
      read_timeout: 300s
      write_timeout: 300s
      max_request_size: 52428800
      rate_limit_per_client: 10
      graceful_shutdown_timeout: 30s
      backpressure_threshold: 2500

    queue:
      redis_url: ${REDIS_URL}
      max_size: 10000
      ttl: 6h
      queue_key: "dolphin:requests"
      processing_key: "dolphin:processing"
      max_retry_count: 3
      recovery_interval: 5m

    batch_formation:
      max_batch_size: 32
      min_batch_size: 1
      check_interval: 50ms

    modal:
      base_url: ${MODAL_API_ENDPOINT}
      timeout: 120s
      max_retries: 3
      retry_delay: 2s
      max_concurrent_batches: 4
      circuit_breaker:
        failure_threshold: 5
        cooldown_period: 30s
        health_check_interval: 10s
      connection_pool:
        max_idle_connections: 10
        idle_connection_timeout: 90s

    response:
      timeout: 15m
      cleanup_interval: 5m

    monitoring:
      enable_metrics: true
      prometheus_port: 9090
      log_level: ${LOG_LEVEL}
---
apiVersion: v1
kind: Secret
metadata:
  name: dolphin-secrets
type: Opaque
data:
  # Base64 encoded Redis URL - replace with actual value
  # Example: echo -n "redis://redis-service:6379" | base64
  redis-url: cmVkaXM6Ly9yZWRpcy1zZXJ2aWNlOjYzNzk=